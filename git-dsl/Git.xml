<?xml version="1.0" encoding="UTF-8"?>
<dsl-extension kind="vcs" type="jetbrains.git" generateDslJar="true">
  <class name="GitVcsRoot">
    <description>Base class for Git VCS roots</description>
  </class>
  <params>
    <param name="url">
      <description>Repository url</description>
    </param>
    <param name="push_url" dslName="pushUrl">
      <description>
        Custom repository push url. If not specified then the url specified in the url property is used for push operations.
        @see url
      </description>
    </param>
    <param name="branch">
      <description>The default branch name</description>
    </param>
    <param name="teamcity:branchSpec" dslName="branchSpec">
      <description>
        [Branch specification](https://confluence.jetbrains.com/display/TCDL/Working+with+Feature+Branches#WorkingwithFeatureBranches-branchSpec)
        to use in VCS root
      </description>
    </param>
    <param name="reportTagRevisions" dslName="useTagsAsBranches" type="boolean" trueValue="true" falseValue="">
      <description>
        When enabled tags matched by branch specification will be shown in UI as regular branches.
        By default false.
      </description>
    </param>
    <param name="usernameStyle" dslName="userNameStyle" type="UserNameStyle">
      <description>
        Defines a way how TeamCity binds VCS changes to the users.
      </description>
    </param>
    <param name="submoduleCheckout" type="CheckoutSubmodules" dslName="checkoutSubmodules">
      <description>
        Whether VCS root should include changes in submodules and check their sources for build.
        By default true.
      </description>
    </param>
    <param name="userForTags">
      <description>
        A username for tag/merge operations in this VCS root.
        Format: Username &lt;email>
      </description>
    </param>
    <param name="serverSideAutoCrlf" dslName="serverSideAutoCRLF" type="boolean" trueValue="true" falseValue="">
      <description>
        Whether TeamCity should convert line-endings of all text files to CRLF during server-side checkout.
        By default false.
      </description>
    </param>
    <param name="agentGitPath">
      <description>
        Custom path to git executable on the build agent machine
      </description>
    </param>
    <param name="agentCleanPolicy" type="AgentCleanPolicy">
      <description>Specifies when the "git clean" command should be executed in case of agent-side checkout</description>
    </param>
    <param name="agentCleanFilesPolicy" type="AgentCleanFilesPolicy">
      <description>
        Specifies which files should be removed when "git clean" command is executed during agent-side checkout.
      </description>
    </param>
    <param name="useAlternates" dslName="useMirrors" type="boolean" trueValue="true" falseValue="">
      <description>
        When this option is enabled, TeamCity creates a separate clone of the repository on each agent
        and uses it in the checkout directory via git alternates. This make agent-side checkout faster.
        By default true.
      </description>
    </param>
    <param name="authMethod" type="compound">
      <description>
        VCS Root authentication method
      </description>
      <option name="anonymous" value="ANONYMOUS">
        <description>Anonymous repository access</description>
      </option>
      <option name="password" value="PASSWORD">
        <description>Password authentication</description>
        <param name="username" dslName="userName"/>
        <param name="secure:password" dslName="password"/>
      </option>
      <option name="uploadedKey" value="TEAMCITY_SSH_KEY">
        <description>
          Uploaded [SSH key](https://confluence.jetbrains.com/display/TCDL/SSH+Keys+Management) with the specified name.
        </description>
        <param name="username" dslName="userName"/>
        <param name="teamcitySshKey" dslName="uploadedKey"/>
      </option>
      <option name="defaultPrivateKey" value="PRIVATE_KEY_DEFAULT">
        <description>
          Default SSH key found on the machine.
          If you use an agent-side checkout, then this key should also be available on the build agent machines.
          Often it is easier to use the uploaded SSH key.
          @see uploadedKey
        </description>
        <param name="username" dslName="userName"/>
      </option>
      <option name="customPrivateKey" value="PRIVATE_KEY_FILE">
        <description>
          SSH key on the specified path. Supported only for server-side checkout.
          Switch to uploaded SSH key if you want to use an agent-side checkout.
          @see uploadedKey
        </description>
        <param name="username" dslName="userName"/>
        <param name="privateKeyPath" dslName="customKeyPath"/>
        <param name="secure:passphrase" dslName="passphrase"/>
      </option>
    </param>
  </params>
  <types>
    <enum name="UserNameStyle">
      <option name="NAME"/>
      <option name="USERID"/>
      <option name="EMAIL"/>
      <option name="FULL"/>
    </enum>
    <enum name="CheckoutSubmodules">
      <option name="SUBMODULES_CHECKOUT"/>
      <option name="IGNORE"/>
    </enum>
    <enum name="AgentCleanPolicy">
      <option name="NEVER"/>
      <option name="ALWAYS"/>
      <option name="ON_BRANCH_CHANGE"/>
    </enum>
    <enum name="AgentCleanFilesPolicy">
      <option name="IGNORED_ONLY"/>
      <option name="NON_IGNORED_ONLY"/>
      <option name="ALL_UNTRACKED"/>
    </enum>
  </types>
</dsl-extension>